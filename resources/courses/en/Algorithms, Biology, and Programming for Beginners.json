{
    "source": "Coursera",
    "description": "The sequencing of the&nbsp;human genome fueled a computational revolution in biology. As a result, modern biology produces as many new&nbsp;algorithms as any other fundamental realm of&nbsp;science.Genome sequencing is just one of hundreds of biological problems that have become inextricable from the computational methods required to solve them. In this course, we will uncover some of the algorithmic ideas that are&nbsp;fundamental to an&nbsp;understanding of modern biology.&nbsp; Computational concepts like dynamic programming and graph theory&nbsp;will help us explore algorithms applied to&nbsp;a wide range of biological topics, from finding regulatory motifs&nbsp;to determining whether the human genome has \"fragile\" regions.&nbsp; Throughout the process, we will apply&nbsp;bioinformatics algorithms to&nbsp;real&nbsp;genetic data.Each chapter in the&nbsp;course textbook&nbsp;covers a single biological question and slowly builds the algorithmic knowledge required to address this challenge. &nbsp;Along the way, coding challenges and exercises will be integrated into the text at the exact moment they are needed. This course will cover algorithms for solving various biological problems along with a handful of programming challenges testing your ability to implement these algorithms.  It offers a gentler-paced alternative to the instructors' two other courses, Bioinformatics Algorithms (Part 1 and Part 2).",
    "contents": "The course will be based around the following biological questions, with the algorithmic ideas that we will use to solve them in parentheses:Where Does DNA Replication Begin? (Algorithmic Warm-up)How Do We Sequence Antibiotics? (Brute Force Algorithms)Which DNA Patterns Act As Cellular Clocks? (Greedy and Randomized Algorithms)How Do We Assemble Genomes? (Graph Algorithms)How Do We Compare Biological Sequences? (Dynamic Programming Algorithms)Are There Fragile Regions in the Human Genome? (Combinatorial Algorithms)Which Animal Gave Us SARS? (Evolutionary Trees)How Do We Locate Disease-Causing Mutations? (Combinatorial Pattern Matching)How Did Yeast Become Such a Good Wine Brewer? (Clustering Algorithms)Some of these topics will require you to complete coding challenges in order to implement bioinformatics algorithms, followed by a comprehension quiz at the end of the topic. &nbsp;Other topics will carry lighter workloads and consist primarily of lecture videos and short quizzes.",
    "requirements": "No background is required beyond an enthusiasm for biology and a willingness to immerse oneself in learning how to program.&nbsp;Students who have never programmed before should be able to approach this course, but we recommend that you first take a short programming tutorial that may last up to two weeks. We make the following suggestions for resources to will help you learn programming.The language tracks on&nbsp;Codecademy, particularly the Python track.An Introduction to Interactive Programming with Python, the acclaimed Coursera course.Introductory problems on&nbsp;Rosalind, a resource for learning bioinformatics created by the course instructors.There are many other online resources for learning programming, and we encourage you to seek them out yourself!If you are an advanced programmer, we recommend that you take the more advanced two-course series, Bioinformatics Algorithms (Part 1) and Bioinformatics Algorithms (Part 2).",
    "effort": "6-10 hours\/week",
    "language": "en",
    "url": "https:\/\/www.coursera.org\/course\/algobioprogramming",
    "title": "Algorithms, Biology, and Programming for Beginners",
    "courseraId": "1617",
    "subjects": "Computer Science: Software Engineering, Mathematics, Information, Tech & Design, Computer Science: Theory"
}