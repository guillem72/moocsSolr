{
    "description": "Want to be a full-stack JavaScript engineer? This computer science course will give you a broad introduction to several of the most popular web and mobile app development toolkits, including MongoDB, ExpressJS, AngularJS, and Node.js. Together, these tools are called the “MEAN stack.”\n\nThis course will teach you the basic concepts of the MEAN stack while walking you through building a shopping cart application. This online store will enable users to search for products, add them to their cart, and check out using Stripe, an online payment processor. You’ll build your own REST API (Representational State Transfer Application Programming Interface) server from scratch using solid MongoDB schema design principles, as well as a web application using AngularJS and a hybrid mobile application using the Ionic framework.\n\nWhen you complete the course, you will receive a discount to MongoDB Professional Certification, enabling you to demonstrate your skills, show recruiters and hiring managers your expertise, and earn a spot in the MongoDB Certified Professional Finder.\n\nNo prior experience with any of the MEAN stack technologies needed. The only prerequisite is a basic knowledge of the JavaScript programming language. Installing and working with MongoDB and Node.js\n\tMongoDB schema design fundamentals\n\tBuilding REST APIs with Node.js and Express\n\tBuilding single page applications with AngularJS\n\tBuilding mobile apps with the Ionic framework",
    "contents": "Course Syllabus\n        Part 1: Introduction to MongoDB and NodeJS\n\tStarting a standalone mongod and connecting with shell\n\t\tpackage.json: installing dependencies with npm\n\t\tConnecting to mongodb with node.js\n\t\tnode.js concurrency and event loop fundamentals\n\t\trequire() basics\n\t\tUsing mocha for testing\n\t\tpackage.json: npm run-script\n\t\tRunning mocha tests with gulp\n\t\nPart 2: MongoDB schema design\n\n\tOverview of retail application\n\t\tIntroduction to mongoose\n\t\tSchema design principle: store what you query for\n\t\tSchema design principle: principle of least cardinality\n\t\tMongoDB indexes\n\t\tRetail application schema: product\n\t\tRetail application schema: category\n\t\tRetail application schema: user and cart\n\t\tAdvanced mongoose features: virtuals\n\t\tAdvanced mongoose features: custom setters and sorting by currency\n\t\n\tPart 3: NodeJS REST APIs with Express\n\tWhat is a REST API?\n\t\tIntroduction to express\n\t\tDependency injection in NodeJS + ExpressJS\n\t\tAPI-level TDD\n\t\tProduct API\n\t\tCategory API\n\t\tCart API\n\t\tIntegrating facebook oauth on the server-side\n\t\tIntegrating Stripe for payments\n\t\tIntegrating MongoDB Text Search\n\t\tIntegrating OpenExchangeRates\n\t\n\tPart 4: Building an AngularJS client\n\tIntroduction: browserify and gulp-browserify\n\t\tWhat is a single page app?\n\t\tAngularJS philosophy and why it matters\n\t\tControllers\n\t\tServices\n\t\tClient-side routing\n\t\tFacebook oauth token authentication\n\t\tCategory view\n\t\tProduct view\n\t\tCart view\n\t\tAdvanced topics: infinite scroll\n\t\n\tPart 5: Hybrid Mobile Apps with Ionic\n\tIntroduction to hybrid mobile apps\n\t\tWhat is the Ionic framework?\n\t\tCode sharing between web client and Ionic app\n\t\tIonic UI components\n\t\tRouting in Ionic\n\t\tCategory view\n\t\tProduct view\n\t\tCart view",
    "instructors": "Valeri Karpov",
    "requirements": "Experience writing front- and back-end software\n\tBasic knowledge of web application architecture\n\tBasic knowledge of JavaScript\n\tExperience working with SQL or NoSQL databases",
    "effort": "5 sections, 1 - 2 hours per section",
    "prices": "Free\n        \n         \n         Add a Verified Certificate for $75",
    "institutions": "MongoDBx",
    "subjects": "Computer Science",
    "language": "English",
    "url": "https:\/\/www.edx.org\/course\/introduction-mongodb-using-mean-stack-mongodbx-m101x",
    "title": "Introduction to MongoDB using the MEAN Stack"
}