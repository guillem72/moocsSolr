{
    "source": "Coursera",
    "description": "Recommender\n systems have changed the way people find products, information, and even \nother people. They study patterns of behavior to know what someone will \nprefer from among a collection of things he has never experienced. The \ntechnology behind recommender systems has evolved over the past 20 years\n into a rich collection of tools that enable the practitioner or \nresearcher to develop effective recommenders. We will study the most \nimportant of those tools, including how they work, how to use them, how \nto evaluate them, and their strengths and weaknesses in practice.The\n algorithms we will study include content-based filtering, user-user \ncollaborative filtering, item-item collaborative filtering, dimensionality \nreduction, and interactive critique-based recommenders. The approach \nwill be hands-on, with six two week projects, each of which will involve\n implementation and evaluation of some type of recommender.In addition to topical lectures, this course includes interviews and \nguest lectures with experts from both academia and industry.Two Ways to Take this Course:This course is designed to support two different types of students and educational goals:Programming Track: &nbsp;Designed\n for students with significant programming and mathematics experience \n(see below), the programming track combines a conceptual and \nmathematical understanding of recommender systems with experience \nprogramming six different recommender systems projects. &nbsp;Students \ncompleting this travel will gain the skills needed to implement basic \nrecommenders from scratch, and to use software libraries and tools to \nimplement more advanced recommenders.Concepts Track:\n &nbsp;Students who are not experienced programmers, or who are primarily \ninterested in understanding the concepts and techniques of recommender \nsystems, without learning to program them, can choose to focus on the \nconceptual and mathematical content, skipping the programming projects \nand associated lecture content.&nbsp; Students in the concepts track are \nstill expected to have significant familiarity with computing systems \nand college-level mathematics, but need not be accomplished programmers.\n &nbsp;We expect this track to be useful for tech-savvy marketing and \nbusiness leaders, as well as engineering managers who may oversee but \nnot directly develop recommender systems. &nbsp;We also hope it will be \nuseful to those looking to understand recommender systems concepts \nwithout the workload associated with programming those systems.&nbsp;  This course introduces the concepts, applications, algorithms, programming, and design of recommender systems--software systems that recommend products or information, often based on extensive personalization.  Learn how web merchants such as Amazon.com personalize product suggestions and how to apply the same techniques in your own systems!",
    "contents": "Topics covered:\nWeek 1:\n\nIntroduction to Course and to Recommender Systems\n    \nWeeks 2 and 3:\n\nNon-Personalized RecommendersUnderstanding Ratings, Predictions, and RecommendationsScales and Normalization\n    Interview with Anthony Jameson (DFKI AI Labs)\nWeeks 4 and 5:\n\nContent-Based RecommendersInferring PreferencesUnary Ratings Knowledge-Based Recommenders\n    Introduction to LensKit ToolkitInterviews with Robin Burke (DePaul University) and Barry Smyth (University College Dublin)\nWeeks 6 and 7:\n\nCollaborative FilteringUser-User k-Nearest Neighbor ApproachTuning CF Algorithms\n    Interviews with Paul Resnick (University of Michigan), Jen Golbeck (University of Maryland) and Dan Cosley(Cornell University)\nWeeks 8 and 9:\n\nEvaluation and Metrics; \nError Metrics; \nDecision-Support MetricsComparative Evaluation: Dead Data vs. Laboratory vs. Field StudyUser-Centered Metrics and EvaluationData Sets\n    Interview with Neal Lathia (University of Cambridge)\nWeeks 10 and 11:\n\nCollaborative Filtering IIItem-Item k-Nearest NeighborBusiness RulesAdjustments for Serendipity and DiversityPerformance ComparisonsHybrid Algorithms\n    Interviews with Brad Miller (Luther College) and Robin Burke (DePaul University)\nWeeks 12 and 13:\n\nDimensionality Reduction RecommendersConcepts behind Latent Semantic Analysis and Singular Value Decomposition\nWeek 14:\n\nAlternative Recommender ApproachesInteractive RecommendersCritique and Dialog-based ApproachesAdvanced TopicsResourcesInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free University of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin (LinkedIn)Conclusion\n    \n",
    "requirements": "For the Concepts Track students should have a basic familiarity with college-level algebra and a general understanding of computer systems concepts.For the Programming Track students should have significant skill in Java programming, basic data structures, college-level algebra, and the ability to install and manage sophisticated software development tools and libraries. &nbsp;Programming track students will install and use significant open-source software tools. Therefore, a special lecture in the first week of class will identify the tool and installation options for various computing platforms.",
    "effort": "4-10 hours\/week",
    "language": "en",
    "url": "https:\/\/www.coursera.org\/course\/recsys",
    "title": "Introduction to Recommender Systems",
    "courseraId": "746",
    "subjects": "Computer Science: Artificial Intelligence, Information, Tech & Design"
}