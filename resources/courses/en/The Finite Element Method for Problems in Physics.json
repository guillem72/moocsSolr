{
    "source": "Coursera",
    "description": "The course includes about 45 hours of lectures covering the material I normally teach in an introductory graduate class at University of Michigan. The treatment is mathematical, which is natural for a topic whose roots lie deep in functional analysis and variational calculus. It is not formal, however, because the main goal of these lectures is to turn the viewer into a competent developer of finite element code. We do spend time in rudimentary functional analysis, and variational calculus, but this is only to highlight the mathematical basis for the methods, which in turn explains why they work so well. Much of the success of the Finite Element Method as a computational framework lies in the rigor of its mathematical foundation, and this needs to be appreciated, even if only in the elementary manner presented here. A background in PDEs and, more importantly, linear algebra, is assumed, although the viewer will find that we develop all the relevant ideas that are needed.&nbsp;The development itself focuses on the classical forms of partial differential equations (PDEs): elliptic, parabolic and hyperbolic. At each stage, however, we make numerous connections to the physical phenomena represented by the PDEs. For clarity we begin with elliptic PDEs in one dimension (linearized elasticity, steady state heat conduction and mass diffusion). We then move on to three dimensional elliptic PDEs in scalar unknowns (heat conduction and mass diffusion), before ending the treatment of elliptic PDEs with three dimensional problems in vector unknowns (linearized elasticity). Parabolic PDEs in three dimensions come next (unsteady heat conduction and mass diffusion), and the lectures end with hyperbolic PDEs in three dimensions (linear elastodynamics). Interspersed among the lectures are responses to questions that arose from a small group of graduate students and post-doctoral scholars who followed the lectures live. At suitable points in the lectures, we interrupt the mathematical development to lay out the code framework, which is entirely open source, and C++ based.&nbsp; This course is an introduction to the finite element method as applicable to a range of problems in physics and engineering sciences. The treatment is mathematical, but only for the purpose of clarifying the formulation. The emphasis is on coding up the formulations in a modern, open-source environment that can be expanded to other applications, subsequently.",
    "contents": "SyllabusThe syllabus is outlined below. Each item is a unit consisting of between 4 and 24 segments (video lectures). A segment may be as short as one, and as long as 25 minutes. Expect to view around 3 hours of video lectures per week. There will be one paper-and-pencil, mathematical, assignment at the end of Unit 1, a quiz at the end of each Unit and 4 coding assignments. All code is to be in C++, using the open source library deal.ii.\n1. Linear, elliptic partial differential equations in one dimension. Elasticity, heat conduction and mass diffusion.\n2. Approximation. The finite-dimensional weak form.\n3. Linear algebra; the matrix-vector form.\n4. More on boundary conditions; basis functions; numerics.\n5. Analysis of the finite element method.\n6. Variational principles.\n7. Linear, elliptic partial dierential equations for a scalar variable in three dimensions. Heat conduction and mass diffusion at steady state.\n8. Lagrange basis functions and numerical quadrature in 1 through 3 dimensions.\n9. Linear, elliptic, partial dierential equations for a scalar variable in two dimensions.\n10. Linear, elliptic partial differential equations for vector unknowns in three dimensions (Linearized elasticity).\n11. Linear, parabolic partial differential equations for a scalar unknown in three dimensions (Unsteady heat conduction and mass diffusion).\n12. Linear, hyperbolic partial dierential equations for a vector unknown in three dimensions (Linear elastodynamics).\nResources\nYou can download the deal.ii library at dealii.org. The lectures include coding tutorials where we list other resources that you can use if you are unable to install deal.ii on your own computer. You will need cmake to run deal.ii. It is available at cmake.org.\nWork expectation\nYou should expect to watch about 3 hours of video lectures a week. The first assignment is mathematical, to be worked out by paper and pencil. It should take a few hours, depending on your background. However, it will not be graded. Each quiz will consist of 2 or 5 multiple choice questions. The remaining are coding assignments, on which there can be quite a spread in the work you have to put in, again depending on your background. Almost all students will find the coding assignments to be more demanding of their time than the first, paper-and-pencil assignment. The second, third and fourth coding assignments should actually take no more time than the first one; you will stand to gain from a modular code, which we try to encourage in the templates that you will use.\nBooks\nThere are many books on finite element methods. This class does not have a required textbook. However, we do recommend the following books for more detailed and broader treatments than can be provided in any form of class:\n The Finite Element Method: Linear Static and Dynamic Finite Element Analysis, T.J.R. Hughes, Dover Publications, 2000.\n The Finite Element Method: Its Basis and Fundamentals, O.C. Zienkiewicz, R.L. Taylor and J.Z. Zhu, Butterworth-Heinemann, 2005.\n A First Course in Finite Elements, J. Fish and T. Belytschko, Wiley, 2007.",
    "requirements": "A working knowledge of linear algebra (matrix-vector manipulations) is needed. Some exposure to partial differential equations would be very helpful. Experience with programming is a must, even if it is only Matlab or a language such as Fortran, C or Python.",
    "effort": "5-10 hours\/week",
    "language": "en",
    "url": "https:\/\/www.coursera.org\/course\/finiteelementmethods",
    "title": "The Finite Element Method for Problems in Physics",
    "courseraId": "511",
    "subjects": "Mathematics, Engineering"
}