{
    "source": "Coursera",
    "description": "If you're taking this course, you've already learned the basics in&nbsp;Part 1, have a basic background in Java and&nbsp;and are ready to focus on more&nbsp;advanced components:notifying users about important eventshandling concurrencyacquiring data over the network&nbsp;leveraging multimedia and graphicsincorporating touch and gesturesworking with sensorsWe'll work on a project together to help you apply these skills and,&nbsp;by the end of this course, you'll have the skills to create your own app!&nbsp;A Comprehensive Program for Android Developers\nThe&nbsp;Mobile Cloud Computing with Android Specialization&nbsp;is&nbsp;comprehensive program in which you will learn to create&nbsp;create&nbsp;complex, cloud-based Android applications, applying what you've learned through hands-on activities and a final project designed with industry partners.\n\n\"This is an excellent resource for any developer wishing to enter the growing mobile app industry. We’ve seen lots of great apps come out of this program.\"\n&nbsp; &nbsp;- Ankur Prasad, Amazon Appstore team\n\n\"The professors provided high-quality course materials and the forums and my fellow students were extremely helpful. To top it all off, being able to participate in the Capstone project and then voted into the top 30 apps was an absolutely amazing experience.&nbsp; I have now achieved my goal of working as a professional Android developer primarily due to the skills I obtained in this specialization.\"\n\n&nbsp; &nbsp;- Daun Davids, program graduate\nJoin our growing community of over 600,000 learners and get started with Android app development today! This course introduces you to the design and implementation of Android applications for mobile devices. You will build upon concepts from the prior course, including handling notifications, using multimedia and graphics and incorporating touch and gestures into your apps.",
    "contents": "Objective 1:&nbsp;In this lesson I discuss how to handle concurrency with Threads, AsyncTask &amp; Handlers. There is also a lecture explaining how to access and process data over the network.Threads, AsyncTask &amp; HandlersNetworkingDisplay Tweet Data: Students build an app that downloads and displays Tweet data. The app uses an AsyncTask for downloading data over the network.Objective 2: In this lesson I discuss using User Notifications to interact with the user, listening for and responding to events using the BroadcastReceiver class. There is also a lecture dealing with using Alarms to run code at pre-scheduled times.User NotificationsThe BroadcastReceiver ClassAlarmsTweet app: Students build an app that displays Twitter data. The app will use BroadcastReceivers and User Notifications to apprise the user of the app’s behavior and state.Objective 3: In this lesson I present a number of technologies related to presenting and interacting with dynamic content. This includes graphics and animation, handling touch input from the user, and recording and playing multimedia.Graphics &amp; AnimationMulti-touch &amp; GesturesMultiMediaBubble Popper: Students write an application to display and animate bubbles on the device's screen. When users touch the screen where a bubble is displayed, the bubble pops. The app will also accept gesture input, allowing the user to change the direction and speed of the bubble, using a fling gesture.Objective 4: In this lesson I go over the many sensors that now come standard on most mobile devices. I also provide a focused discussion of using sensors to capture location information and using maps to display that information. Finally, I discuss some options for storing structured data.SensorsLocation &amp; MapsDataManagementPlace Badge Collector: Students build an application that uses location information to collect Badges for the places they visit.Mini-project - DailySelfie: Students will build a complete app from scratch. This app will remind users to take a picture of themselves once a day. The app will collect and display the resulting set of photos.",
    "requirements": "This course is created for students who already know how to program in Java, but are not expected to have studied mobile application development. This corresponds roughly to Sophomore- or Junior-level undergraduate students in a computer science related discipline or the equivalent.If you don't already know Java, but have strong familiarity with other programming languages, you can improve your Java knowledge by taking one of the many Java tutorials and online courses available on the web.As discussed above, this course assumes previous programming knowledge. It also assumes that you are willing to search for, read and learn from Android's developer documentation. This is both a necessary skill for success in the class, and, in our experience, a necessary skill for successful Android developers at all levels.In short, this course is not designed for truly novice programmers. If your background is not appropriate for this class, consider first taking a less programming-intensive introduction to Android such as \"Creative, Serious and Playful Science of Android Apps\", by Lawrence Angrave of the University of Illinois and Urbana-Champaign.",
    "effort": "5-10 hours\/week",
    "language": "en",
    "url": "https:\/\/www.coursera.org\/course\/androidpart2",
    "title": "Programming Mobile Applications for Android Handheld Systems: Part 2",
    "courseraId": "2600",
    "subjects": "Computer Science: Software Engineering, Information, Tech & Design"
}