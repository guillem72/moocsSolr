{
    "source": "Coursera",
    "description": "The Beginning Game\nProgramming with C# course is all about learning how to develop video games\nusing the C# programming language. Why use C# instead of C++, Java,\nActionScript, or some other programming language you may have heard of? First,\nusing C# lets us use the Microsoft XNA and open-source MonoGame frameworks,\nwhich help us quickly develop games for Windows, Android, iOS, Mac OS, and\nothers. Second, the Unity game engine is very popular with indie game\ndevelopers, and C# is one of the programming languages you can use in the Unity\nenvironment. And finally, C# is a really good language for learning how to\nprogram.\n\n\n\nThat learning how to program\ncomment is important because this course doesn't assume you have any previous programming\nexperience. Don't worry if you've never written code before; we'll start at the\nvery beginning and work our way up to building a small, complete game by the\nend of the course. Throughout the course you'll learn core programming concepts\nthat apply to lots of programming languages, including C#, and you'll also\nlearn how to apply those concepts when you develop games: drawing all the\nentities in the game world, updating the game world based on user input and\nsimple physics, playing music and sound effects in your games, and so on.\n\n\n\nComputer programming is really fun in general,\nand programming games is even better! Start learning how to program video games using the C# programming language. Plenty of practice opportunities are included!",
    "contents": "Week One: Introduction to the course, the Visual Studio environment, and the Microsoft XNA framework. Writing your first C# program and starting to learn about data types.Student Work: Programming Assignment 1 Week Two: Classes and objects, the core of object-oriented programming (which works great for games!). Writing your first XNA programs.Student Work: Programming Assignment 2, Programming Assignment 1 Peer EvaluationWeek Three: Strings and what we can do with them. Selection, how to implement it, and why it's so useful in game development.Student Work: Programming Assignment 3, Programming Assignment 2 Peer EvaluationWeek Four: No new topicsStudent Work: Project Increment 1, Programming Assignment 3 Peer EvaluationWeek Five: Mouse and 360 controller input in XNA. Arrays and collection classes to store multiple pieces of information.Student Work: Programming Assignment 4, Project Increment 1 Peer EvaluationWeek Six: No new topicsStudent Work: Project Increment 2, Programming Assignment 4 Peer EvaluationWeek Seven: Iteration - the various ways we can do multiple things in our code.Student Work: Programming Assignment 5, Project Increment 2 Peer EvaluationWeek Eight: No new topicsStudent Work: Project Increment 3, Programming Assignment 5 Peer EvaluationWeek Nine: Class design and implementation in more detail. How are all those useful classes we've been using actually coded?Student Work: Programming Assignment 6, Project Increment 3 Peer EvaluationWeek Ten: No new topicsStudent Work: Project Increment 4, Programming Assignment 6 Peer EvaluationWeek Eleven: Adding music and sound effects to your games. Keyboard input and text output in XNA.Student Work: Project Increment 5, Project Increment 4 Peer EvaluationWeek Twelve: The optional project as a great way to review for the Final Exam.Student Work: Final Exam, Project Increment 5 Peer Evaluation",
    "requirements": "No previous programming experience required; all are welcome!",
    "effort": "5-10 hours\/week",
    "language": "en",
    "url": "https:\/\/www.coursera.org\/course\/gameprogramming",
    "title": "Beginning Game Programming with C#",
    "courseraId": "781",
    "subjects": "Computer Science: Software Engineering"
}